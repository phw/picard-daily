name: Build

on:
  push:
    branches: ["*"]
    tags-ignore: [continuous]
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # every day at midnight

env:
  APPIMAGE_EXTRACT_AND_RUN: 1

jobs:
  appimage:
    name: Build AppImage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install gettext
        run: |
          sudo apt-get update
          sudo apt-get install gettext
      - name: Build AppImage
        run: |
          ./build.sh
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: AppImage
          path: MusicBrainz-Picard*.AppImage*

  upload:
    name: Create release and upload artifacts
    runs-on: ubuntu-latest
    needs:
      - appimage
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
      - name: Inspect directory after downloading artifacts
        run: ls -alFR
      - name: Create release and upload artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_CONTINUOUS_RELEASE_NAME: MusicBrainz Picard daily builds
        run: |
            wget -q https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
            chmod +x pyuploadtool-x86_64.AppImage
            ./pyuploadtool-x86_64.AppImage **/MusicBrainz-Picard*.AppImage*
